<x-app-layout>
@push('headPeta')
    {{--        <script>console.log('dari dashboard')</script>--}}

    <!-- leaflet -->
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
              integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
              crossorigin=""/>
        <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
                integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
                crossorigin=""></script>

        <!-- panel layers -->
        <link rel="stylesheet" href="{{ URL::asset('public/css/leaflet-panel-layers.css') }}"/>
        <script src="{{ URL::asset('public/js/leaflet-panel-layers.js') }}"></script>

        <!-- marker cluster -->
        <link rel="stylesheet" href="{{ URL::asset('public/css/MarkerCluster.css') }}"/>
        <link rel="stylesheet" href="{{ URL::asset('public/css/MarkerCluster.Default.css') }}"/>
        <script src="{{ URL::asset('public/js/leaflet.markercluster-src.js') }}"></script>

        <!-- polyline measure -->
        <link rel="stylesheet" href="{{ URL::asset('public/css/Leaflet.PolylineMeasure.css') }}"/>
        <script src="{{ URL::asset('public/js/Leaflet.PolylineMeasure.js') }}"></script>

        <!-- leaflet ajax -->
        <script src="{{ URL::asset('public/js/leaflet.ajax.min.js') }}"></script>

        <!-- spinner -->
        <script src="{{ URL::asset('public/js/spin.min.js') }}"></script>
        <script src="{{ URL::asset('public/js/leaflet.spin.min.js') }}"></script>

        <!-- feature group -->
        <script src="{{ URL::asset('public/js/leaflet.featuregroup.subgroup-src.js') }}"></script>

        <!-- street view -->
        <script src="{{ URL::asset('public/js/StreetViewButtons.js') }}"></script>

        <!-- context menu -->
        <link rel="stylesheet" href="{{ URL::asset('public/css/leaflet.contextmenu.min.css') }}"/>
        <script src="{{ URL::asset('public/js/leaflet.contextmenu.min.js') }}"></script>

        <!-- search -->
        <link rel="stylesheet" href="{{ URL::asset('public/css/leaflet-search.css') }}"/>
        <link rel="stylesheet" href="{{ URL::asset('public/css/leaflet-search.mobile.css') }}"/>
        <script src="{{ URL::asset('public/js/leaflet-search.js') }}"></script>
        <script src="{{ URL::asset('public/js/leaflet-search-geocoder.js') }}"></script>

        <!-- drawing -->
{{--        <link rel="stylesheet" href="{{ URL::asset('public/draw/leaflet.draw.css') }}"/>--}}
{{--        <script src="{{ URL::asset('public/draw/Leaflet.draw.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/Leaflet.Draw.Event.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/Toolbar.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/Tooltip.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/GeometryUtil.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/LatLngUtil.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/LineUtil.Intersect.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/Polygon.Intersect.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/Polyline.Intersect.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/ext/TouchEvents.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/DrawToolbar.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Feature.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.SimpleShape.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Polyline.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Marker.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Circle.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.CircleMarker.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Polygon.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/draw/handler/Draw.Rectangle.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/EditToolbar.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/EditToolbar.Edit.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/EditToolbar.Delete.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/Control.Draw.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.Poly.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.SimpleShape.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.Rectangle.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.Marker.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.CircleMarker.js') }}"></script>--}}
{{--        <script src="{{ URL::asset('public/draw/edit/handler/Edit.Circle.js') }}"></script>--}}


        {{-- <script src="{{ URL::asset('public/js/test.js') }}"></script>--}}

    @endpush

    <div class="bg-white dark:bg-red-600 overflow-hidden shadow-sm sm:rounded-lg">
        <div class="bg-white dark:bg-green-800" id="mapid" style="height: calc(100vh - 73px)"></div>
        {{--        <div class="flex h-screen bg-white dark:bg-green-800"></div>--}}
    </div>

    @push('peta')
        {{--petanya--}}

        {{--                 @can('create arjasa','read arjasa','update arjasa','delete arjasa')--}}
        {{--                  <script src="{{ URL::asset('public/js/peta/petaTest.js') }}"></script>  --}}
        {{--                 <script src="{{ URL::asset('public/js/peta/petaTestDB.js') }}"></script>--}}
        {{--                 @endcan--}}

        {{-- TODO snub coba pake blade langsung, tanpa external js, soalnya ndak bisa manggil dari controller langsung kalo pake external js ~> dicoba pake fetch? --}}
        <script>

            // var drawnItems = new L.FeatureGroup(); // bisa
            let data = @json($featureCollection); // dari controller ambil dari database

            // overlayMaps
            var pipapelayanan = L.geoJSON(data,
                {
                  style: function (feature) {
                    return {color: "green"};
                    return layer.feature.properties.color // contoh
                  }
                }).bindPopup(function (layer) {
                           /* return layer.feature.properties.description; */
                           return layer.feature.properties.ukuran_pipa; // ukuran_pipa ini ambil dari kolom database
                }
                /* { */
                /*     // style: m_style_pipapelayanan, */
                /*     onEachFeature: function (feature, layer) { */
                /*         // console.log(Object.entries(feature.properties)); */
                /*         // drawnItems.addLayer(layer); // bisa */
                /*         layer.on({ */
                /*             click: (e) => { */
                /*                 alert("click dong"); */
                /*             }, */
                /*         }); */
                /*         layer.bindPopup("popup pipa pelayanan"); */
                /*     }, */
                /* } */
                ),

                pelanggan = new L.GeoJSON.AJAX(
                    ["public/maps/pelanggan/07/07-pelanggan.geojson"],
                    {
                        onEachFeature: function (feature, layer) {
                            // drawnItems.addLayer(layer); // bisa
                            layer.bindPopup("halo pelanggan");
                        },
                    }
                );
            // var arjasa = L.layerGroup([pipapelayanan]);

            // basemap
            var hybrid = new L.tileLayer(
                    "http://mt0.google.com/vt/lyrs=y&hl=en&x={x}&y={y}&z={z}"
                ),
                streets = new L.tileLayer(
                    "http://mt0.google.com/vt/lyrs=r&hl=en&x={x}&y={y}&z={z}"
                );

            var m = L.map("mapid", {
                center: [-7.700935688163334, 114.02025856339858],
                zoom: 11,
                // layers: [streets, arjasa]
                layers: [streets],
            });

            var baseMaps = {
                "<span class= 'ml-1'>Hybrid</span>": hybrid,
                "<span class= 'ml-1'>Streets</span>": streets,
            };

            var overlayMaps = {
                "<span class= 'ml-1'>Pipa Pelayanan</span>": pipapelayanan,
                "<span class= 'ml-1'>Pelanggan</span>": pelanggan,
            };

            // var drawControl = new L.Control.Draw({
            //     edit: {
            //         featureGroup: drawnItems, // bisa
            //     },
            // });
            // m.addControl(drawControl);
            //
            // m.on(L.Draw.Event.CREATED, function (event) {
            //     const layer = event.layer;
            //     drawnItems.addLayer(layer); // bisa
            //     drawnItems.toGeoJSON(); // create
            // });

            // m.on(L.Draw.Event.EDITED, function (event) {
            //     const layer = event.layer;
            //     drawnItems.addLayer(layer);
            //     pipapelayanan.removeLayer(layer);
            //     drawnItems.toGeoJSON(); // create
            // });

            var layerAsli = L.control.layers(baseMaps, overlayMaps).addTo(m);
            // layerAsli.addOverlay(drawnItems, "<span class= 'ml-1'>drawnItems</span>"); // bisa

        </script>
    @endpush


</x-app-layout>
